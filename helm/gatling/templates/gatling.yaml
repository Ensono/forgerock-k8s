# This is a one shot job to run our performance test and write the results out to a volume.
apiVersion: v1
kind: Pod
metadata:
  name: gatling
  labels:
    name: gatling
    app: gatling
spec:
  restartPolicy: Never
  terminationGracePeriodSeconds: 3
  # See https://github.com/kubernetes/git-sync/issues/38
  securityContext:
    runAsUser: 0
  containers:
  - name: git-sync
    image: gcr.io/google_containers/git-sync:v2.0.4
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - name: simulations
      mountPath: /git
    - name: git-secret
      mountPath: /etc/git-secret
    env:
    - name: GIT_SYNC_REPO
      value: {{ .Values.gitRepo }}
    - name: GIT_SYNC_DEST
      value: forgeops-init
    - name: GIT_SYNC_SSH
      value: "true"
    - name: GIT_SYNC_ONE_TIME
      value: "false"
    - name: GIT_SYNC_DEPTH
      value:  "1"
    - name: GIT_SYNC_WAIT
      value:  "60"
  - name: gatling
    image:  "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    imagePullPolicy: IfNotPresent
    # args:  gatling.sh -sf simulation folder -s simulation
    # If you want to exec into the gatling pod, use this - the pod will just sleep.
    # command: ["/bin/sh",  "-c", "sleep 10000"]
    # Use this form to run a simulation. The sleep is needed so the container does not exit while we examine the results.
    command: ["/bin/sh", "-c", "bin/gatling.sh -sf /config/forgeops-init/gatling/simulations/forgerock-qa -s openam.authn.RestLogin && sleep 100000"]
    volumeMounts:
    - name: perftest-results
      mountPath: /opt/gatling/results
    - name: simulations
      mountPath: /config
  - name: nginx
    image: nginx
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - name: perftest-results
      mountPath: /usr/share/nginx/html
  volumes:
  - name: perftest-results
    emptyDir: {}
  - name: simulations
    emptyDir: {}
  - name: git-secret
    secret:
      secretName: git-creds
      defaultMode: 256